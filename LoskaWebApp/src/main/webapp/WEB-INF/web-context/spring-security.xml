<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:security="http://www.springframework.org/schema/security"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
            http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/security 
            http://www.springframework.org/schema/security/spring-security-3.1.xsd">

<!-- <http pattern="/css/**" security="none"/> -->
<security:http pattern="/login" security="none"/>
	<security:http>
		<security:intercept-url pattern="/newUser" access="IS_AUTHENTICATED_ANONYMOUSLY" />
				<security:intercept-url pattern="/css/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
								<security:intercept-url pattern="/js/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
								<security:intercept-url pattern="/images/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
<!-- 				<security:intercept-url pattern="/index" access="ROLE_USER" /> -->
		<security:intercept-url pattern="/**" access="ROLE_USER" />
		<!-- show login form -->
		<security:form-login login-page="/login"  default-target-url="/index" authentication-failure-url="/loginfailed" authentication-success-handler-ref="authSuccess"/>
		<security:logout logout-success-url="/login" />
	</security:http>
	
	<bean id="authSuccess" class="com.loska.util.LoginSuccessHandlerImpl"/>

	<security:authentication-manager>
		<security:authentication-provider>
			<security:jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="
		      select username,password, enabled 
		      from users where username=?"

				authorities-by-username-query="
		      select u.username, ur.authority from users u, user_roles ur 
		      where u.user_id = ur.user_id and u.username =?  " />
		</security:authentication-provider>
	</security:authentication-manager>
</beans>